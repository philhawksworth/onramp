---
title: Edge Functions
layout: layouts/base.webc
---

<template webc:type="11ty" 11ty:type="liquid,md">

# Interecpt and enhance HTTP responses at request time

## Try it

Netlify can automatically package and deploy the edge functions you include in your project.
  
1. Add a folder to contain your serverless functions in your project at `/netlify/edge-functions`
1. Add a file called `geo.js` to your new edge functions folder
1. Paste the JavaScript below into your new geo.js function file
1. To tell Netlify to execute the Edge Function for every request to the home page of this site, add the config below to you `netlify.toml` file
1. Commit your changes and push your code to trigger a new deploy
1. Visit this home page of this site again in your fresh deploy. You should see geolcation data injected into the page.


```
// import a utility to help us update the HTML response
import { HTMLRewriter } from "https://ghuc.cc/worker-tools/html-rewriter/index.ts";

export default async (request, context) => {
  
  // get the pending HTTP response ready to make updates to it
  const response = await context.next();
  
  // Update the response by injecting some status messages
  return new HTMLRewriter()
    .on("p[data-geo]", {
      element(element) {
        const geoInfo  = `You are visiting from <span>${context.geo?.city}</span> in <span>${context.geo?.country?.name}</span>`;
        element.append(geoInfo, {html: true})
        element.setAttribute("class", "injected");
      }
    })
    .transform(response);

};
```

## Toml

```
[[edge_functions]]
  path = "/"
  function = "geo"
```


</template>
